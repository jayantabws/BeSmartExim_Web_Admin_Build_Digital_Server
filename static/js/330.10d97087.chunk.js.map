{"version":3,"file":"static/js/330.10d97087.chunk.js","mappings":"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","sources":["components/shared/AxiosMaster.js","components/shared/AxiosSubscription.js","components/subscription/EditSubscription.js"],"sourcesContent":["import axios from 'axios';\r\nimport * as AppConstant from './AppConstant';\r\n\r\nconst instance = axios.create({\r\n    baseURL: AppConstant.MASTER_API_URL\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(config => {\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n    if (userId) {\r\n        config.headers['accessedBy'] = userId;\r\n    }\r\n    else config.headers['accessedBy'] = 1\r\n    \r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(response => {\r\n    return response;\r\n}, error => {\r\n    return Promise.reject(error.response);\r\n});\r\n\r\nexport default instance;","import axios from 'axios';\r\nimport * as AppConstant from './AppConstant';\r\n\r\nconst instance = axios.create({\r\n    baseURL: AppConstant.MASTER_API_URL\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(config => {\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n    if (userId) {\r\n        config.headers['accessedBy'] = userId;\r\n    }\r\n    else config.headers['accessedBy'] = 1\r\n    \r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(response => {\r\n    return response;\r\n}, error => {\r\n    return Promise.reject(error.response);\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from 'react';\r\nimport AxiosMaster from '../shared/AxiosMaster'; // Import AxiosMaster\r\nimport AxiosSubscription from '../shared/AxiosSubscription';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst EditSubscription = () => {\r\n  const { subscriptionId } = useParams(); // Access the subscriptionId from the URL\r\n\r\n  const [subscriptionData, setSubscriptionData] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    validityDay: '',\r\n    isCustom: '',\r\n    isActive: '',\r\n    countryId : \"\",\r\n  continentId: \"\",\r\n  DATA_ACCCESS: \"\",\r\n  DOWNLOAD_LIMIT : \"\",\r\n  MAX_DOWNLOAD_DAY: \"\",\r\n  WORKSPACE: \"\",\r\n  SUPPORT: \"\",\r\n  TICKET_MANAGER : \"\",\r\n  RECORD_PER_WORKSPACE: \"\",\r\n  SUB_USER: \"\",\r\n  DISPLAY_FIELDS: \"\",\r\n  QUERY_PER_DAY : \"\",\r\n\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch the current subscription data based on subscriptionId when the component mounts\r\n    AxiosMaster({\r\n      method: 'GET',\r\n      url: `/masterdata-management/subscription/${subscriptionId}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // Set the subscription data in state\r\n        setSubscriptionData(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log('Err', err);\r\n        // Handle the error appropriately\r\n      });\r\n  }, [subscriptionId]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    // Update the subscriptionData state with the new value\r\n    setSubscriptionData({\r\n      ...subscriptionData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Send a PUT request to update the subscription data\r\n    AxiosMaster({\r\n      method: 'PUT',\r\n      url: `/masterdata-management/subscription/${subscriptionId}`,\r\n      data: JSON.stringify(subscriptionData),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // Handle success and possibly show a success message\r\n        console.log('Subscription updated successfully', res);\r\n      })\r\n      .catch((err) => {\r\n        console.log('Err', err);\r\n        // Handle the error appropriately and show an error message\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Subscription {subscriptionId}</h2>\r\n      <form>\r\n        <div>\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={subscriptionData.name}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Description:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={subscriptionData.description}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Price:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"price\"\r\n            value={subscriptionData.price}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Validity Day:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"validityDay\"\r\n            value={subscriptionData.validityDay}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>isCustom:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"isCustom\"\r\n            value={subscriptionData.isCustom}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>isActive:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"isActive\"\r\n            value={subscriptionData.isActive}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n\r\n\r\n\r\n        {/* Add similar fields for other subscription properties */}\r\n        <button type=\"button\" onClick={handleSubmit}>\r\n          Save\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditSubscription;\r\n"],"names":["instance","axios","create","baseURL","AppConstant","interceptors","request","use","config","userId","sessionStorage","getItem","headers","error","Promise","reject","response","subscriptionId","useParams","_useState","useState","name","description","price","validityDay","isCustom","isActive","countryId","continentId","DATA_ACCCESS","DOWNLOAD_LIMIT","MAX_DOWNLOAD_DAY","WORKSPACE","SUPPORT","TICKET_MANAGER","RECORD_PER_WORKSPACE","SUB_USER","DISPLAY_FIELDS","QUERY_PER_DAY","_useState2","_slicedToArray","subscriptionData","setSubscriptionData","useEffect","AxiosMaster","method","url","concat","then","res","data","catch","err","console","log","handleInputChange","event","_event$target","target","value","_objectSpread","_defineProperty","_jsxs","children","_jsx","type","onChange","onClick","JSON","stringify"],"sourceRoot":""}