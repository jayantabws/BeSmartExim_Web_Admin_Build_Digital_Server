{"version":3,"file":"static/js/982.f4e13ce6.chunk.js","mappings":"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","sources":["components/shared/AxiosMaster.js","components/shared/Loader.js","components/users/CreateUserSubscription.js"],"sourcesContent":["import axios from 'axios';\r\nimport * as AppConstant from './AppConstant';\r\n\r\nconst instance = axios.create({\r\n    baseURL: AppConstant.MASTER_API_URL\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(config => {\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n    if (userId) {\r\n        config.headers['accessedBy'] = userId;\r\n    }\r\n    else config.headers['accessedBy'] = 1\r\n    \r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(response => {\r\n    return response;\r\n}, error => {\r\n    return Promise.reject(error.response);\r\n});\r\n\r\nexport default instance;","import { Modal } from 'react-bootstrap';\nconst Loader = (props) =>{\n    return(\n        <Modal  show={true} \n        backdrop=\"static\"\n        keyboard={false}>\n            <div className=\"main-spinner-wrapper\" >\n                {/*<div className=\"loader\"></div>*/}\n\n                <h4>Retrieving Data.</h4> Please wait..\n                <div class=\"donut\"></div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default Loader;","import React, { Component,useState, useRef, useCallback, useEffect, Fragment } from 'react'\r\nimport { Row, Col, Modal, Button, FormGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Select from 'react-select'\r\nimport AxiosMaster from '../shared/AxiosMaster';\r\nimport AxiosUser from \"../shared/AxiosUser\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Loader from '../shared/Loader'\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nconst initialValues = {\r\n  subscriptionId: \"\",\r\n  isActive: \"\"\r\n};\r\nconst validateForm = Yup.object().shape({\r\n  subscriptionId: Yup.string().required(\"This field is required\"),\r\n  isActive: Yup.string().required(\"This field is required\")\r\n});\r\n\r\n\r\nconst CreateUserSubscription = (props) => {\r\n\r\n  const [userList, setUserList] = useState([]);\r\n  const [subscriptionList, setSubscriptionList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (values) => {\r\n    setLoading(true)\r\n      const postData = {\r\n        \"subscriptionId\": values.subscriptionId,        \r\n        \"userId\": props.ID,\r\n        \"isActive\": values.isActive\r\n      }\r\n      AxiosUser({\r\n        method: \"POST\",\r\n        url: `user-management/user-subscription/create`,\r\n        data: JSON.stringify(postData),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n        .then(res => {\r\n          setLoading(false)\r\n          Swal.fire({\r\n            title: 'Thank You',\r\n            text: \"Subscription Plan Assigned Successfully.\",\r\n            icon: 'success',\r\n          }).then((isConfirm)=> {\r\n            if(isConfirm.value){\r\n              props.userModalSubmit()\r\n            }         \r\n          });\r\n        })\r\n        .catch(err => {\r\n          setLoading(false)\r\n          console.log(\"Err\", err);\r\n          let errorMsg = \"Somethhing went wrong, please try again.\"\r\n          if (err.data.errorMsg) {\r\n            errorMsg = err.data.errorMsg;\r\n          }\r\n          Swal.fire({\r\n            title: 'Oops!',\r\n            text: errorMsg,\r\n            icon: 'error',\r\n          })\r\n        });\r\n\r\n  }\r\n\r\n  const getSubscriptionList = () => {\r\n\r\n    AxiosMaster({\r\n      method: \"GET\",\r\n      url: `masterdata-management/subscription/list`,    \r\n    })\r\n      .then(res => {\r\n        setSubscriptionList(res.data.subscriptionList)\r\n      })\r\n      .catch(err => {\r\n        setSubscriptionList([])\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSubscriptionList()\r\n  },[])\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"table-responsive\">\r\n\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validateForm}\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  {({ values, errors, setFieldValue, setFieldError, touched, isValid, handleSubmit, submitForm }) => {\r\n                    return (\r\n                      <Form >\r\n\r\n                        <div className=\"form-group\">\r\n                        <label><b>Select Subscription Plan</b></label>\r\n                          <Field\r\n                            name=\"subscriptionId\"\r\n                            component=\"select\"\r\n                            className={`form-control ${touched.subscriptionId && errors.subscriptionId ? \"is-invalid\" : \"\"}`}\r\n                            autoComplete=\"off\"      \r\n                            onChange={event => {\r\n                              setFieldValue(\"subscriptionId\", event.target.value);\r\n                            }}\r\n                          >\r\n                                <option value=\"\" >Please Select</option>\r\n                             {subscriptionList && subscriptionList.length > 0 ? subscriptionList.map((title, qIndex) => ( \r\n                                <option value={title.id} key = {qIndex}>{title.name}</option>\r\n                                )) : null} \r\n                            {touched.subscriptionId && errors.subscriptionId && (<p className=\"error\">{errors.subscriptionId}</p>)}\r\n                          </Field>   \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <label><b>Status</b></label>\r\n                          <Field\r\n                            name=\"isActive\"\r\n                            component=\"select\"\r\n                            className={`form-control ${touched.isActive && errors.isActive ? \"is-invalid\" : \"\"}`}\r\n                            autoComplete=\"off\"      \r\n                            onChange={event => {\r\n                              setFieldValue(\"isActive\", event.target.value);\r\n                            }}\r\n                          >\r\n                                <option value=\"\" >Please Select</option>\r\n                                <option value=\"Y\" >ACTIVE</option>\r\n                                <option value=\"N\" >IN-ACTIVE</option>\r\n                               \r\n                            {touched.isActive && errors.isActive && (<p className=\"error\">{errors.isActive}</p>)}\r\n                          </Field>   \r\n                        </div>\r\n                       \r\n                        <button type=\"submit\" onClick={(event) => {\r\n                          event.preventDefault();\r\n                          handleSubmit();\r\n                        }} className=\"btn btn-primary\">Create Subscription</button>\r\n                      </Form>\r\n                    )\r\n                  }\r\n                  }\r\n                </Formik>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n         \r\n        </div>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateUserSubscription\r\n"],"names":["instance","axios","create","baseURL","AppConstant","interceptors","request","use","config","userId","sessionStorage","getItem","headers","error","Promise","reject","response","props","_jsx","Modal","show","backdrop","keyboard","children","_jsxs","className","class","initialValues","subscriptionId","isActive","validateForm","Yup","shape","required","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","subscriptionList","setSubscriptionList","_useState5","_useState6","setLoading","useEffect","AxiosMaster","method","url","then","res","data","catch","err","Formik","validationSchema","onSubmit","values","postData","ID","AxiosUser","JSON","stringify","Swal","title","text","icon","isConfirm","value","userModalSubmit","console","log","errorMsg","_ref","errors","setFieldValue","touched","setFieldError","handleSubmit","isValid","submitForm","Form","Field","name","component","concat","autoComplete","onChange","event","target","length","map","qIndex","id","type","onClick","preventDefault"],"sourceRoot":""}