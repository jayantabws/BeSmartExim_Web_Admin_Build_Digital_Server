{"version":3,"file":"static/js/725.d5271316.chunk.js","mappings":"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","sources":["components/activitylog/LoginTracker.js"],"sourcesContent":["import React, { Component,useState, useRef, useCallback, useEffect } from 'react'\r\nimport AxiosUser from '../shared/AxiosUser';\r\nimport Swal from 'sweetalert2';\r\nimport { Row, Col, Modal, Button, FormGroup } from 'react-bootstrap';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport spinner from \"../shared/Spinner\"\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nconst validateForm = Yup.object().shape({\r\n\r\n  userId: Yup.string().required(\"This field is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  userId : \"\",\r\n}\r\n\r\nconst LoginTracker = () => {\r\n\r\n  const [loginList, setLoginList] = useState([]);\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  const [sortName, setSortName] = useState(undefined);\r\n  const [sortOrder, setSortOrder] = useState(undefined);\r\n\r\n  \r\n  function onSortChange(sortName, sortOrder) {\r\n    console.info('onSortChange', arguments);\r\n    setSortName(sortName);\r\n    setSortOrder(sortOrder);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    handleSubmit(\"\");\r\n  },[])\r\n\r\n\r\n\r\n  const getUsers = () => {\r\n    AxiosUser({\r\n      method: \"GET\",\r\n      url: `/user-management/user/list`\r\n    })\r\n      .then(res => {\r\n        setUserList(res.data.userList);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Err\", err);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (values) => {\r\n    let url = \"\"\r\n    if(values.userId){\r\n      url = `user-management/user/loginlist?userId=${values.userId}`\r\n    }\r\n    else { \r\n      url = `user-management/user/loginlist`\r\n    }\r\n\r\n    AxiosUser({\r\n      method: \"GET\",\r\n      url: url,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        setLoginList(res.data.loginList);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Err\", err);\r\n      });\r\n  }\r\n\r\n  const indexN = (cell,row,enumObject, index) => {\r\n    return  (<div>{index+1}</div>);\r\n  }\r\n\r\n  const dateFormatter = (cell,row) => {\r\n    return cell ? moment(cell).format(\"MMM. DD,  YYYY HH:mm\") : null\r\n  }\r\n  \r\n  const options = {\r\n    sortName: sortName,\r\n    sortOrder: sortOrder,\r\n    onSortChange: onSortChange\r\n  };\r\n  \r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"page-header\">\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Activity Log</a></li>\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\"> <h3 className=\"page-title\"> Login Tracker </h3></li>\r\n            </ol>\r\n          </nav>\r\n          <Formik\r\n                  initialValues={initialValues}\r\n                  // validationSchema={validateForm}\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  {({ values, errors, setFieldValue, setFieldError, touched, isValid, handleSubmit, submitForm }) => {\r\n  \r\n                    return (\r\n\r\n                      <Form >\r\n                  <div class=\"row justify-content-end\">\r\n\r\n                      <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5\">\r\n                      <div className=\"form-group\">                        \r\n                          <Field\r\n                            name=\"userId\"\r\n                            component=\"select\"\r\n                            className={`form-control ${touched.company_name && errors.company_name ? \"is-invalid\" : \"\"}`}\r\n                            autoComplete=\"off\"      \r\n                            onChange={event => {\r\n                              setFieldValue(\"userId\", event.target.value);\r\n                            }}\r\n                          >    \r\n                            <option value= \"\" >Please Select User ID</option>\r\n                            {userList && userList.length > 0 ? userList.map((title, qIndex) => ( \r\n                              <option key = {qIndex} value= {title.id} >{title.firstname + \"  \"+ title.lastname + \" ( \"+ title.email + \" )\"}</option>\r\n                              )) : null}\r\n\r\n\r\n                            {touched.userId && errors.userId && (<p className=\"error\">{errors.userId}</p>)}\r\n                          </Field>   \r\n                        </div>\r\n\r\n                      </div>\r\n                      \r\n                      <div class=\"col-xs-12 col-sm-12 col-md-2 col-lg-2\"><button type=\"submit\"  className=\"btn btn-primary\">FILTER</button></div>\r\n\r\n</div>        \r\n                        \r\n                      </Form>\r\n                      \r\n                    )\r\n                  }\r\n                  }\r\n                </Formik>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 grid-margin stretch-card\">\r\n            <div className=\"card\">            \r\n              <div className=\"card-body\">                \r\n                <div>\r\n                <BootstrapTable  data={loginList} striped hover \r\n                    pagination={ true } search\r\n                    options={ options }\r\n                >\r\n                    <TableHeaderColumn width='50' isKey dataField='id' dataFormat={ indexN }>Sl No</TableHeaderColumn>\r\n                    <TableHeaderColumn width='150' dataField='name'  dataSort={ true }>Name</TableHeaderColumn>\r\n                    <TableHeaderColumn width='175' dataField='email' dataSort={ true }>Email</TableHeaderColumn>\r\n                    <TableHeaderColumn width='150' dataField='ipAddress' dataSort={ true }>IP Address</TableHeaderColumn>\r\n                    <TableHeaderColumn width='200' dataField='sessionId' dataSort={ true }>Session ID</TableHeaderColumn>\r\n                    <TableHeaderColumn width='150' dataField='loginTime'  dataFormat={ dateFormatter } dataSort={ true }>Login Time</TableHeaderColumn>\r\n                    <TableHeaderColumn width='150' dataField='logoutTime'  dataFormat={ dateFormatter } dataSort={ true }>Logout Time</TableHeaderColumn>\r\n                </BootstrapTable>\r\n                 \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>              \r\n        </div>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LoginTracker\r\n"],"names":["initialValues","Yup","shape","userId","required","_useState","useState","_useState2","_slicedToArray","loginList","setLoginList","_useState3","_useState4","userList","setUserList","_useState5","undefined","_useState6","sortName","setSortName","_useState7","_useState8","sortOrder","setSortOrder","useEffect","getUsers","handleSubmit","AxiosUser","method","url","then","res","data","catch","err","console","log","values","concat","headers","dateFormatter","cell","row","moment","format","options","onSortChange","info","arguments","_jsxs","children","className","_jsx","href","onClick","event","preventDefault","Formik","onSubmit","_ref","errors","setFieldValue","touched","setFieldError","isValid","submitForm","Form","class","Field","name","component","company_name","autoComplete","onChange","target","value","length","map","title","qIndex","id","firstname","lastname","email","type","BootstrapTable","striped","hover","pagination","search","TableHeaderColumn","width","isKey","dataField","dataFormat","enumObject","index","dataSort"],"sourceRoot":""}